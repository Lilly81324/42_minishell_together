Make a repo?
-> Just do it on the website, it will tell you how

Set Changes for commit
git add .

Commit the set changes to a local repo
git commit -m "Message"

Push local repo branch to remote repo branch
git push

Create a branch locally
git checkout -b <branchname>

Make remote repo track a local branch
git push -u origin <branchname>

Switch to local repo/branch
git checkout <branchname>

Delete local branch
git branch -d <branchname>

Reset specific file to last commit
git checkout origin/main -- path/to/file

Reset local branch to latest version of remote main branch 
(Discards local changes)
git reset --hard origin/main


Workflow:
----------------------------------------------
Switch branches with "git checkout <branchname>"
Stay on your branch
Here you can "git add .", "git commit" and "git push"
To update your remote and local branch
----------------------
Checking out another branch after making changes:
If you want to check out another branch,
then you should commit your recent changes.
Then you can run "git checkout <branchname>".
----------------------
Getting the newest main version to your personal branch:
Be checked into the branch you want to reset, then run
"git reset --hard origin/main"
To set your local branch to the newest commit from remote main
----------------------
Resetting current branch to last pushed version:
Be checked into the branch you want to reset, then run
"git reset --hard origin/<branchname>"
To set your local branch to the newest commit from remote <branchname>
----------------------
Providing working code to main:
Once you have working code, add, comitt
and push it to your remote branch
"git add ."
"git commit -m "Message""
"git push"
Now you can go to the Github Website and create a pull request
Use the website to solve conflicts and finish the pull request
Now you have updated the main function with your new code.
